#CNV analysis using copykat package  (Gao et al., 2021)
## code used in this analysis was modified from https://github.com/navinlabcode/copykat
## Warning: This step is highly computationally demanding!!

Idents(epithelial_cell_seurat) <- "orig.ident"  ### we only conduceted CNV analysis of the epithelial cells (EPCAM+)

for (i in (epithelial_cell_seurat@meta.data$orig.ident %>% unique())){

epithelial_cell_raw_for_loop_seurat <- subset(epithelial_cell_seurat, idents = i)
exp.rawdata  <- as.matrix(epithelial_cell_raw_for_loop_seurat[["RNA"]]$counts) 

copykat.test <- copykat(rawmat=exp.rawdata, id.type="S", ngene.chr=10, win.size=25, KS.cut=0.1, sam.name="test", distance="euclidean", 
                        norm.cell.names="",output.seg="FALSE",
                        genome="hg20",n.cores=4, plot.genes = T, LOW.DR = 0.05, UP.DR = 0.2)

assign(paste0("copykat.test_",i), copykat.test)

pred.test <- data.frame(copykat.test$prediction)

assign(paste0("pred.test_",i), pred.test)}



Idents(epithelial_cell_seurat) = "ploidy"

epithelial_cell_seurat_aneuploid <- subset(epithelial_cell_seurat, idents = "aneuploid")
epithelial_cell_seurat_aneuploid$ploidy <- "aneuploid_epithelial"
epithelial_cell_seurat_aneuploid$subtype<- epithelial_cell_seurat_aneuploid$ploidy

epithelial_cell_seurat <- subset(epithelial_cell_seurat, ident = (epithelial_cell_seurat@meta.data$ploidy %>% unique()))

#$ Combine the data frames using rbind and cbind:
combined_df_ploidy <- rbind(pred.test_CID3586, pred.test_CID3838, pred.test_CID3921, pred.test_CID3941,pred.test_CID3948, pred.test_CID4040,
                            pred.test_CID4067, pred.test_CID4290A, pred.test_CID44041, pred.test_CID4461, pred.test_CID4463, pred.test_CID4465,
                            pred.test_CID4495, pred.test_CID44971, pred.test_CID44991, pred.test_CID4515, 
                            pred.test_CID45171, pred.test_CID4530N)

combined_copykat.test$prediction <- rbind(copykat.test_CID3838$prediction, copykat.test_CID3921$prediction, copykat.test_CID3941$prediction,
  copykat.test_CID3948$prediction, copykat.test_CID4040$prediction, copykat.test_CID4067$prediction,
  copykat.test_CID4290A$prediction, copykat.test_CID44041$prediction, copykat.test_CID4461$prediction,
  copykat.test_CID4463$prediction, copykat.test_CID4465$prediction, copykat.test_CID4495$prediction,
  copykat.test_CID44971$prediction, copykat.test_CID44991$prediction, copykat.test_CID4515$prediction,
  copykat.test_CID45171$prediction, copykat.test_CID4530N$prediction) 

combined_copykat.test$CNAmat <- cbind(copykat.test_CID3838$CNAmat, copykat.test_CID3921$CNAmat, copykat.test_CID3941$CNAmat,
                                          copykat.test_CID3948$CNAmat, copykat.test_CID4040$CNAmat, copykat.test_CID4067$CNAmat,
                                          copykat.test_CID4290A$CNAmat, copykat.test_CID44041$CNAmat, copykat.test_CID4461$CNAmat,
                                          copykat.test_CID4463$CNAmat, copykat.test_CID4465$CNAmat, copykat.test_CID4495$CNAmat,
                                          copykat.test_CID44971$CNAmat, copykat.test_CID44991$CNAmat, copykat.test_CID4515$CNAmat,
                                          copykat.test_CID45171$CNAmat, copykat.test_CID4530N$CNAmat) 

combined_df_ploidy <- data.frame(copykat.test$prediction)
combined_df_ploidy <- combined_df_ploidy[-which(combined_df_ploidy$copykat.pred=="not.defined"),]  ##remove undefined cells
CNA.test <- data.frame(combined_copykat.test$CNAmat)

my_palette <- colorRampPalette(rev(RColorBrewer::brewer.pal(n = 3, name = "RdBu")))(n = 999)

chr <- as.numeric(CNA.test$chrom) %% 2+1
rbPal1 <- colorRampPalette(c('black','grey'))
CHR <- rbPal1(2)[as.numeric(chr)]
chr1 <- cbind(CHR,CHR)

rbPal5 <- colorRampPalette(RColorBrewer::brewer.pal(n = 8, name = "Dark2")[2:1])
com.preN <- pred.test$copykat.pred
pred <- rbPal5(2)[as.numeric(factor(com.preN))]

cells <- rbind(pred,pred)
col_breaks = c(seq(-1,-0.4,length=50),seq(-0.4,-0.2,length=150),seq(-0.2,0.2,length=600),
               seq(0.2,0.4,length=150),seq(0.4, 1,length=50))

####  Defining subpopulations of aneuploid tumor cells:

tumor.cells <- combined_df_ploidy$cell.names[which(combined_df_ploidy$copykat.pred=="aneuploid")]
tumor.mat <- CNA.test[, which(colnames(CNA.test) %in% tumor.cells)]

hcc <- hclust(parallelDist::parDist(t(tumor.mat),threads =4, method = "euclidean"), method = "ward.D2")
hc.umap <- cutree(hcc,2)

###################
### Assigning the ploidy the metadata of scRNA seq data from  Wu et al. (2021):
## Correctly assign the ploidy:
epithelial_cell_seurat@meta.data$ploidy <- NA
for (i in combined_df_ploidy$cell.names){
epithelial_cell_seurat@meta.data[rownames(epithelial_cell_seurat@meta.data) == i, "ploidy"] <- combined_df_ploidy$copykat.pred[combined_df_ploidy$cell.names == i]}


Idents(epithelial_cell_seurat) = "ploidy"

### Subsetting the tumorous (aneuploid) epithelial cells ONLY:
epithelial_cell_seurat_aneuploid <- subset(epithelial_cell_seurat, idents = "aneuploid") 

epithelial_cell_seurat_aneuploid$ploidy <- "aneuploid_epithelial"
epithelial_cell_seurat_aneuploid$subtype<- epithelial_cell_seurat_aneuploid$ploidy

epithelial_cell_seurat <- subset(epithelial_cell_seurat, ident = (epithelial_cell_seurat@meta.data$ploidy %>% unique())

#### obtaining only the diploid and aneuploid cells; remove the low confidence/ undefined cells 
Idents(epithelial_cell_seurat) <- "ploidy"
Idents(epithelial_cell_seurat_filtered) <- "IHC"
epithelial_cell_seurat_filtered <- subset(epithelial_cell_seurat, idents = c("diploid","aneuploid"))

epithelial_cell_seurat_filtered@meta.data$ploidy_IHC <- paste0(epithelial_cell_seurat_filtered@meta.data$ploidy,"_",epithelial_cell_seurat_filtered@meta.data$IHC)

epithelial_cell_seurat_filtered <- subset(epithelial_cell_seurat_filtered, idents = (epithelial_cell_seurat_filtered@meta.data$ploidy_IHC %>% unique()))

