## pre-processing of the TCGA-BRCA bulk-RNA seq data
## Code used in this analysis were modified from that provided in https://cloud.tencent.com/developer/article/2018520

library(data.table) 

dat <- data.table::fread('TCGA-BRCA.htseq_counts.tsv.gz',
                         data.table = F)  

head(dat[,1:4])
tail(dat[,1:4]) 
#dat = dat[1:(nrow(dat)-5),]
rownames(dat) = dat$Ensembl_ID

a = dat
a = a[,-1]
##逆转 log
a = as.matrix(2^a - 1)

head(a[,1:4])
tail(a[,1:4]) 
colSums(a)/1e6

exp = apply(a, 2, as.integer)
rownames(exp) = rownames(dat)
exp= log(edgeR::cpm(exp)+1)
library(stringr)
head(rownames(exp))

library(AnnoProbe)
library(tinyarray)
rownames(exp) = substr(rownames(exp), 1, 15) 

re = annoGene(rownames(exp),ID_type = "ENSEMBL");head(re)
exp = trans_array(exp,ids = re,from = "ENSEMBL",to = "SYMBOL")
head(exp[,1:4])
tail(exp[,1:4]) 
proj='TCGA-BRCA'
save(exp,file = paste0(proj,".htseq_counts.rdata")) 

### Part II:
rm(list=ls())

proj='TCGA-BRCA'
load(file = paste0(proj,".htseq_counts.rdata"))
Group = ifelse(as.numeric(str_sub(colnames(exp),14,15)) < 10,'tumor','normal')  
Group = factor(Group,levels = c("normal","tumor"))
print(table(Group))

# Only need the tumor sample for survival analysus
exprSet = exp[,Group=='tumor']


clinical = read.delim('TCGA-BRCA.GDC_phenotype.tsv.gz',
                      fill = T,header = T,sep = "\t")

surv = read.delim('TCGA-BRCA.survival.tsv',header = T) 
library(tidyverse)

meta = left_join(surv,clinical,by = c("sample"= "submitter_id.samples"))
head(meta[,1:4])
tail(meta[,1:4]) 
print(dim(meta))

#remove patients with incomplete survival info / survival days < 30 
k1 = meta$OS.time >= 30
k2 = !(is.na(meta$OS.time)|is.na(meta$OS))
meta = meta[k1&k2,]
meta = meta[,c(
  'sample',
  'OS',
  'OS.time'
)]

colnames(meta)=c('ID','event','time')
meta$time = meta$time/30
rownames(meta) <- meta$ID


####
s = intersect(rownames(meta),colnames(exprSet_basal))


exprSet = exprSet[,s]
meta = meta[s,]
identical(rownames(meta),colnames(exprSet)) #checking!!!!!!
save(exprSet,meta,file = paste0(proj,".for_surviva.basal.rdata")) 


# Part III: Cox analysis:
library(survival)
library(survminer) 
#library(ggstatsplot) 
proj='TCGA-BRCA'
load(file = paste0(proj,".for_survival.rdata"))

# 1. prepare data for coxph----
## Cox regression for survival analysis 
exprSet[1:4,1:4]
phe=meta
head(phe)
mySurv <- with(phe, Surv(time, event))
survival_dat=phe

cox_results <-apply(exprSet , 1 , function(gene){
  # gene= as.numeric(exprSet[1,]) 
  group=ifelse(gene>median(gene),'high','low') 
  group=factor(  group,levels = c('low','high'))
  if( length(table(group))<2)
    return(NULL)
  survival_dat <- data.frame(group=group,# stage=phe$stage,
                             stringsAsFactors = F)
  
  m=coxph(mySurv ~ group, 
          # mySurv ~  stage+ group,  
          data =  survival_dat)
  
  beta <- coef(m)
  se <- sqrt(diag(vcov(m)))
  HR <- exp(beta)
  HRse <- HR * se
  
  #summary(m)
  tmp <- round(cbind(coef = beta, se = se, z = beta/se, 
                     p = 1 - pchisq((beta/se)^2, 1),
                     HR = HR, HRse = HRse,
                     HRz = (HR - 1) / HRse, HRp = 1 - pchisq(((HR - 1)/HRse)^2, 1),
                     HRCILL = exp(beta - qnorm(.975, 0, 1) * se),
                     HRCIUL = exp(beta + qnorm(.975, 0, 1) * se)), 3)
  return(tmp['grouphigh',])
  
})

# 2. specify the value----
cox_results=t(cox_results)
head(cox_results)
cox_results=cox_results[order(cox_results[,'HR'],decreasing = T),]

table(cox_results[,4]<0.01)
table(cox_results[,4]<0.05) 
save(cox_results, 
     file = 'batch_cox_results_basal.Rdata')


### Extracting only the basal-like breast cancer patients from the TCGA-BRCA cohort (Since we are studying the TNBC):

TCGA_id_basal <- clinical_info_TCGA_data[clinical_info_TCGA_data$Subtype == "Basal", "Patient ID"]

 #TCGA_id_basal <- as.vector(TCGA_id_basal)
 
 TCGA_cancer_type_basal = clinical_info_TCGA_data[clinical_info_TCGA_data$Subtype == "Basal", "Cancer Type"]
 TCGA_cancer_type_basal[TCGA_cancer_type_basal == "IDC"] <- "Invasive Ductal Carcinoma"
 TCGA_cancer_type_basal[TCGA_cancer_type_basal == "ILC"] <- "Invasive Lobular Carcinoma"

 
TCGA_basal_clinical_info <- cbind(TCGA_id_basal, TCGA_cancer_type_basal) ## Combining useful clinical info. into a dataframe
 
TCGA_basal_clinical_info <- TCGA_basal_clinical_info[!duplicated(TCGA_basal_clinical_info$`Patient ID`), ] ## filter out the repeated patient ID

rownames(TCGA_basal_clinical_info) <- TCGA_basal_clinical_info$`Patient ID`

colnames(exprSet) <- gsub("-01A","", colnames(exprSet))
colnames(exprSet) <- gsub("-01B","", colnames(exprSet))
colnames(exprSet) <- gsub("-01C","", colnames(exprSet))
colnames(exprSet) <- gsub("-06A","", colnames(exprSet))
 exprSet <- as.data.frame(exprSet)
 
 exprSet_basal <- subset(exprSet, select = TCGA_basal_clinical_info$`Patient ID`)




